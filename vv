#include <Adafruit_NeoPixel.h>

#define PIN_DATA        2     // Пин для подключения к датчику данных сдвигового регистра
#define PIN_CLOCK       3     // Пин для подключения к синхронизации сдвигового регистра
#define PIN_LATCH       4     // Пин для подключения к защелке сдвигового регистра

#define NUM_PIXELS      10    // Количество светодиодов в гирлянде

Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_PIXELS, PIN_DATA, NEO_GRB + NEO_KHZ800);

int brightness = 255;  // Начальная яркость гирлянды
bool isOn = false;     // Переменная для отслеживания состояния включения/выключения гирлянды
int mode = 0;          // Переменная для переключения режимов работы гирлянды

void setup() {
  pinMode(PIN_DATA, OUTPUT);
  pinMode(PIN_CLOCK, OUTPUT);
  pinMode(PIN_LATCH, OUTPUT);
  
  strip.begin();
  strip.show();  // Инициализация гирлянды
}

void loop() {
  // В Tinkercad использование виртуальных кнопок или других средств эмуляции кнопок будет требовать специфической логики чтения их состояния
  
  // Пример эмуляции состояния кнопок
  bool button1State = /* чтение состояния виртуальной кнопки 1 */;
  bool button2State = /* чтение состояния виртуальной кнопки 2 */;
  bool button3State = /* чтение состояния виртуальной кнопки 3 */;
  
  // Переключение состояния включения/выключения гирлянды
  if (button1State == HIGH) {
    isOn = !isOn;
    delay(200); // Задержка для эмуляции дребезга кнопки
  }
  
  // Изменение яркости гирлянды
  if (button2State == HIGH) {
    brightness = (brightness == 255) ? 50 : 255; // Пример изменения яркости от 50 до 255
    delay(200); // Задержка для эмуляции дребезга кнопки
  }
  
  // Переключение режимов работы гирлянды
  if (button3State == HIGH) {
    mode = (mode + 1) % 3; // Пример переключения между тремя режимами
    delay(200); // Задержка для эмуляции дребезга кнопки
  }
  
  // Управление гирляндой в зависимости от состояния кнопок
  if (isOn) {
    switch (mode) {
      case 0:
        // Режим 1: например, бегущая точка
        // код для эффекта бегущей точки
        break;
        
      case 1:
        // Режим 2: например, плавное изменение цвета
        // код для плавного изменения цвета
        break;
        
      case 2:
        // Режим 3: например, мигание
        // код для мигания гирлянды
        break;
        
      default:
        break;
    }
  } else {
    strip.clear(); // Выключение гирлянды
    strip.show();
  }
}
